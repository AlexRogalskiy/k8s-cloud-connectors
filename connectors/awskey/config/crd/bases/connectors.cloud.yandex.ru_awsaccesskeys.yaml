
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.5.0
  creationTimestamp: null
  name: awsaccesskeys.connectors.cloud.yandex.ru
spec:
  group: connectors.cloud.yandex.ru
  names:
    kind: AWSAccessKey
    listKind: AWSAccessKeyList
    plural: awsaccesskeys
    shortNames:
    - awskey
    singular: awsaccesskey
  scope: Namespaced
  versions:
  - name: v1
    schema:
      openAPIV3Schema:
        description: 'AWSAccessKey: is the Schema for the awsaccesskey API'
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: 'AWSAccessKeySpec: defines the desired state of AWSAccessKeySpec'
            properties:
              name:
                description: 'ServiceAccountID: id of service account from which the key will be issued'
                type: string
            type: object
          status:
            description: 'AWSAccessKeyStatus: defines the observed state of AWSAccessKey'
            properties:
              folderId:
                description: 'KeyID: id of an issued key'
                type: string
              secretRef:
                description: 'SecretRef: reference to a secret containing issued key values.'
                properties:
                  name:
                    description: Name is unique within a namespace to reference a secret resource.
                    type: string
                  namespace:
                    description: Namespace defines the space within which the secret name must be unique.
                    type: string
                type: object
            type: object
        type: object
    served: true
    storage: true
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
